//删除倒数第n个节点
LNode* removeNthFromEnd(LNode* head, int n) {
	if (NULL == head || n < 1)		//判断n和链表是否合理
		return NULL;
	struct LNode*pFast = head;
	struct LNode*pSlow = head;
	struct LNode* del = NULL;

	//定义两个指针，快指针先走n步，然后再和慢指针一起走
	for (int i = 0; i < n; ++i)
	{
		if (NULL != pFast->next)
			pFast = pFast->next;
		//如果第倒数n个结点是正数第一个节点，直接头删
		else if (i == (n - 1))
		{
			del = head;
			head = head->next;
			free(del);
			del = NULL;
			return head;
		}
		else
			return NULL;

	}

	//快慢指针一起走，走到第n个结点的前一个
	while (NULL != pFast->next)
	{
		pFast = pFast->next;
		pSlow = pSlow->next;
	}
	
	del = pSlow->next;
	pSlow->next = pSlow->next->next;
	free(del);
	del = NULL;

	return head;

}